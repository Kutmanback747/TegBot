CREATE_USER_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS telegram_users
(
ID INTEGER PRIMARY KEY,
TELEGRAM_ID INTEGER,
USERNAME CHAR(50),
FIRST_NAME CHAR(50),
LAST_NAME CHAR(50),
REFERENCE_LINK TEXT,
BALANCE INTEGER,
UNIQUE (TELEGRAM_ID)
)
"""

INSERT_USER_QUERY = """
INSERT OR IGNORE INTO telegram_users VALUES (?,?,?,?,?,?,?)
"""
CREATE_BAN_USER_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS ban
(
ID INTEGER PRIMARY KEY,
TELEGRAM_ID INTEGER,
BAN_COUNT INTEGER,
UNIQUE (TELEGRAM_ID)
)
"""

INSERT_BAN_USER_QUERY = """
INSERT INTO ban VALUES (?,?,?)
"""


SELECT_BAN_USER_QUERY = """
SELECT * FROM ban WHERE TELEGRAM_ID = ?
"""
UPDATE_BAN_COUNT_QUERY = """
UPDATE ban SET BAN_COUNT = BAN_COUNT + 1 WHERE TELEGRAM_ID = ?
"""



CREATE_PROFILE_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS profile
(
ID INTEGER PRIMARY KEY,
TELEGRAM_ID INTEGER,
NICKNAME CHAR(50),
BIO TEXT,
AGE INTEGER
ZODIAC_SIGN CHAR(30),
EDUCATION CHAR(20),
HOBBY CHAR(10),
GPA INTEGER,
PHOTO TEXT,
UNIQUE (TELEGRAM_ID)
)
"""


INSERT_PROFILE_QUERY = """
INSERT OR IGNORE INTO profile VALUES (?,?,?,?,?,?,?,?,?)
"""

SELECT_PROFILE_QUERY = """
SELECT * FROM profile WHERE TELEGRAM_ID = ?
"""

SELECT_ALL_PROFILE_QUERY = """
SELECT * FROM profile 
"""

CREATE_LIKE_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS like_profile
(
ID INTEGER PRIMARY KEY,
OWNER_TELEGRAM_ID INTEGER,
LIKER_TELEGRAM_ID INTEGER,
UNIQUE (OWNER_TELEGRAM_ID, LIKER_TELEGRAM_ID)
)
"""

INSERT_LIKE_QUERY = """
INSERT OR IGNORE INTO like_profile VALUES (?,?,?)
"""

CREATE_DISLIKE_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS dislike_profile
(
ID INTEGER PRIMARY KEY,
OWNER_TELEGRAM_ID INTEGER,
DISLIKER_TELEGRAM_ID INTEGER,
UNIQUE (OWNER_TELEGRAM_ID, DISLIKER_TELEGRAM_ID)
)
"""

INSERT_DISLIKE_QUERY = """
INSERT OR IGNORE INTO dislike_profile VALUES (?,?,?)
"""

FILTER_LEFT_JOIN_PROFILE_QUERY = """
SELECT * FROM profile
LEFT JOIN dislike_profile ON profile.TELEGRAM_ID = dislike_profile.OWNER_TELEGRAM_ID
AND dislike_profile.DISLIKER_TELEGRAM_ID = ?
LEFT JOIN like_profile ON profile.TELEGRAM_ID = like_profile.OWNER_TELEGRAM_ID
AND like_profile.LIKER_TELEGRAM_ID = ?
WHERE dislike_profile.ID IS NULL
AND like_profile.ID IS NULL 
AND profile.TELEGRAM_ID != ?
"""

ALTER_USER_TABLE = """
ALTER TABLE telegram_users  ADD COLUMN REFERENCE_LINK TEXT
"""
ALTER_USER_V2_TABLE = """
ALTER TABLE telegram_users  ADD COLUMN BALANCE INTEGER
"""

UPDATE_REFERENCE_LINK_QUERY = """
UPDATE telegram_users SET REFERENCE_LINK = ? WHERE TELEGRAM_ID = ?
"""
SELECT_USER_QUERY = """
SELECT * FROM telegram_users WHERE TELEGRAM_ID = ?
"""
# SELECT_PROFILE_QUERY = """
# SELECT * FROM profile WHERE TELEGRAM_ID = ?
# """
# CREATE_ANKETA_TABLE_QUERY = """
# CREATE TABLE IF NOT EXISTS anketa
# (
# ID INTEGER PRIMARY KEY,
# TELEGRAM_ID INTEGER,
# NICKNAME CHAR(50),
# BIO TEXT,
# AGE INTEGER
# ZODIAC_SIGN CHAR(30),
# EDUCATION CHAR(20),
# HOBBY CHAR(10),
# GPA INTEGER,
# PHOTO TEXT,
# UNIQUE (TELEGRAM_ID)
# )
# """
#
#
# INSERT_ANKETA_QUERY = """
# INSERT INTO anketa VALUES (?,?,?,?,?,?,?,?,?)
# """

SELECT_FIRST_NAME_FROM_TG_USERS = """
SELECT FIRST_NAME,TELEGRAM_ID FROM telegram_users
WHERE FIRST_NAME = ?"""

DELETE_PROFILE = """
DELETE FROM profile WHERE TELEGRAM_ID =?"""

CREATE_REFERENCE_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS referral
(
ID INTEGER PRIMARY KEY,
OWNER_TELEGRAM_ID INTEGER,
REFERRAL_TELEGRAM_ID INTEGER,
UNIQUE (OWNER_TELEGRAM_ID, REFERRAL_TELEGRAM_ID)
)
"""
INSERT_REFERENCE_QUERY = """
INSERT  INTO referral VALUES (?,?,?)
"""

DOUBLE_SELECT_REFERRAL_USER_QUERY = """
SELECT 
    COALESCE(telegram_users.BALANCE, 0) as BALANCE,
    COUNT(referral.ID) as total_referrals
FROM
    telegram_users
LEFT JOIN
    referral on telegram_users.TELEGRAM_ID = referral.OWNER_TELEGRAM_ID
WHERE 
    telegram_users.TELEGRAM_ID = ?
"""

SELECT_USER_BY_LINK_QUERY = """
SELECT * FROM telegram_users WHERE REFERENCE_LINK = ?
"""

UPDATE_USER_BALANCE_QUERY = """
UPDATE telegram_users SET BALANCE = COALESCE(BALANCE, 0) + 100 WHERE TELEGRAM_ID = ?
"""

CREATE_NEWS_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS news
(
ID INTEGER PRIMARY KEY,
TELEGRAM_ID INTEGER,
URL_NEWS TEXT(50),
FIRST_NAME CHAR(50),
UNIQUE (TELEGRAM_ID)
)
"""

INSERT_NEWS_QUERY = """
INSERT  INTO news VALUES (?,?,?,?)
"""

CREATE_ENGLISH_LEVEL_LEARN_TABLE = '''CREATE TABLE IF NOT EXISTS eng_level_table(
id INTEGER PRIMARY KEY,
link TEXT,
UNIQUE(link))'''


INSERT_ENGLISH_LEVEL_LEARN_TABLE = '''INSERT OR IGNORE INTO eng_level_table VALUES (?,?)'''

CREATE_ENGLISH_LEVEL_LEARN_TABLE_B2 = '''CREATE TABLE IF NOT EXISTS eng_level_table_b2(
id INTEGER PRIMARY KEY,
link TEXT,
UNIQUE(link))'''

INSERT_ENGLISH_LEVEL_LEARN_TABLE_B2 = '''INSERT OR IGNORE INTO eng_level_table_b2 VALUES (?,?)'''

CREATE_ENGLISH_LEVEL_LEARN_TABLE_B1 = '''CREATE TABLE IF NOT EXISTS eng_level_table_b1(
id INTEGER PRIMARY KEY,
link TEXT,
UNIQUE(link))'''

INSERT_ENGLISH_LEVEL_LEARN_TABLE_B1 = '''INSERT OR IGNORE INTO eng_level_table_b1 VALUES (?,?)'''

CREATE_ENGLISH_LEVEL_LEARN_TABLE_A2 = '''CREATE TABLE IF NOT EXISTS eng_level_table_a2(
id INTEGER PRIMARY KEY,
link TEXT,
UNIQUE(link))'''

INSERT_ENGLISH_LEVEL_LEARN_TABLE_A2 = '''INSERT OR IGNORE INTO eng_level_table_a2 VALUES (?,?)'''

CREATE_ENGLISH_LEVEL_LEARN_TABLE_A1 = '''CREATE TABLE IF NOT EXISTS eng_level_table_a1(
id INTEGER PRIMARY KEY,
link TEXT,
UNIQUE(link))'''

INSERT_ENGLISH_LEVEL_LEARN_TABLE_A1 = '''INSERT OR IGNORE INTO eng_level_table_a1 VALUES (?,?)'''

CREATE_FAVOURITE_ENGLISH_LEVEL_LEARN_TABLE = '''CREATE TABLE IF NOT EXISTS favourite_eng_level_table(
id INTEGER PRIMARY KEY,
tg_user_id INTEGER,
link TEXT)'''

INSERT_FAVOURITE_ENGLISH_LEVEL_LEARN_TABLE = '''INSERT INTO favourite_eng_level_table VALUES (?,?,?)'''

SELECT_FAV_ENG_LEVEL_TABLE = '''SELECT id FROM favourite_eng_level_table WHERE tg_user_id=? AND link=?'''

SELECT_REFERRALS = """
SELECT * FROM referral WHERE OWNER_TELEGRAM_ID = ?
"""